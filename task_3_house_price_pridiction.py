# -*- coding: utf-8 -*-
"""Task_3 House Price Pridiction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FW6oeOmiCYpkoOcewcpatdMvxUm22GbO

# **# Task 4: Predicting House Prices using Linear Regression**
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# 1. Load dataset (Downloaded from Kaggle: BostonHousing.csv)
data = pd.read_csv("housing.csv", delim_whitespace=True, header=None)

# Add column names manually (standard Boston Housing dataset)
data.columns = [
    "CRIM", "ZN", "INDUS", "CHAS", "NOX", "RM", "AGE",
    "DIS", "RAD", "TAX", "PTRATIO", "B", "LSTAT", "MEDV"
]

print(data.head())

# Features (all except 'medv') and Target ('medv')
X = data.drop("MEDV", axis=1)
y = data["MEDV"]

# 2. Preprocessing: Normalize features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# 3. Train/Test Split
X_train, X_test, y_train, y_test = train_test_split(
    X_scaled, y, test_size=0.2, random_state=42
)

# 4. Model Training
model = LinearRegression()
model.fit(X_train, y_train)

# 5. Predictions and Evaluation
y_pred = model.predict(X_test)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
print("\nâœ… Root Mean Squared Error (RMSE):", rmse)

# 6. Example Prediction
print("\nExample Prediction from Test Data:")
print("Actual Price:", y_test.iloc[0])
print("Predicted Price:", y_pred[0])

# 7. User Input Prediction
print("\nðŸ”¹ Enter new house features to predict price:")

user_data = []
for feature in X.columns:
    value = float(input(f"Enter value for {feature}: "))
    user_data.append(value)

# Convert to DataFrame
user_df = pd.DataFrame([user_data], columns=X.columns)

# Scale user input
user_scaled = scaler.transform(user_df)

# Predict price
user_pred = model.predict(user_scaled)
print("\nðŸ’° Predicted House Price:", round(user_pred[0], 2))